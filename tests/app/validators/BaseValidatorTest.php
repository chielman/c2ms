<?php

namespace Validators;

use ReflectionClass;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-02-09 at 21:48:21.
 */
class BaseValidatorTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var BaseValidator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        
        $rules = [
            'boolean'   => ['mode' => 'boolean'],
            'slug'      => ['mode' => 'slug']
        ];
        
        $this->object = $this->getMockForAbstractClass('Validators\\BaseValidator');        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    protected function setRules($rules)
    {
        $reflection = new ReflectionClass($this->object);
        $reflection_property = $reflection->getProperty('rules');
        $reflection_property->setAccessible(true);
        $reflection_property->setValue($this->object, $rules);
    }
    
    /**
     * @covers Validators\BaseValidator::getRules
     */
    public function testGetRules() {
        $rules = ['slug' => ['mode' => 'slug']];
        $this->setRules($rules);
        
        $this->assertEquals($rules, $this->object->getRules() );
    }
    
    /**
     * @covers Validators\BaseValidator::validate
     */
    public function testEmptyValidate() {
        
        $input = [];
        
        $output = $this->object->validate($input);
        
        $this->assertTrue( count($output) === 0);
    }
    
    /**
     * @covers Validators\BaseValidator::validate
     */
    public function testBooleanValidate() {
        
        $this->setRules(['boolean' => ['mode' => 'boolean']]);
        
        $inputs = [
            'boolean' => true
        ];

        $output = $this->object->validate($inputs);
        
        $this->assertArrayHasKey( 'boolean', $output );        
    }
    
    /**
     * @covers Validators\BaseValidator::validate
     */
    public function testSlugValidate() {
        
        $this->setRules(['slug' => ['mode' => 'slug']]);
        
        $inputs = [
            'slug' => 'aa-bb'
        ];
        
        $output = $this->object->validate($inputs);
        
        $this->assertArrayHasKey( 'slug', $output );  
    }
}
